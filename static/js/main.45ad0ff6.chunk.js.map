{"version":3,"sources":["components/statistics/statistics.module.css","components/feedback/feedback.module.css","components/feedback/Feedback.js","components/statistics/Statistics.js","components/notification/Notification.js","components/section/Section.js","App.js","index.js"],"names":["module","exports","FeedbackOptions","handleClickGood","handleClickNeutral","handleClickBad","className","style","button","type","onClick","Statistics","good","neutral","bad","totalFeedback","positiveFeedbackPercentage","title","p","Notification","msg","Section","App","state","setState","prevState","this","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,MAAQ,0BAA0B,EAAI,wB,gBCAxDD,EAAOC,QAAU,CAAC,OAAS,2B,6NCGZ,SAASC,EAAT,GAIX,IAHFC,EAGC,EAHDA,gBACAC,EAEC,EAFDA,mBACAC,EACC,EADDA,eAEA,OACE,qCACE,wBAAQC,UAAWC,IAAMC,OAAQC,KAAK,SAASC,QAASP,EAAxD,kBAGA,wBACEG,UAAWC,IAAMC,OACjBC,KAAK,SACLC,QAASN,EAHX,qBAOA,wBAAQE,UAAWC,IAAMC,OAAQC,KAAK,SAASC,QAASL,EAAxD,oB,oBCjBS,SAASM,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,cACAC,EACC,EADDA,2BAEA,OACE,qCACE,oBAAIV,UAAWC,IAAMU,MAArB,wBACA,oBAAGX,UAAWC,IAAMW,EAApB,mBAA8BN,KAC9B,oBAAGN,UAAWC,IAAMW,EAApB,sBAAiCL,KACjC,oBAAGP,UAAWC,IAAMW,EAApB,kBAA6BJ,KAC7B,oBAAGR,UAAWC,IAAMW,EAApB,oBAA+BH,KAC/B,oBAAGT,UAAWC,IAAMW,EAApB,+BACqB,IAClBF,GAA0D,QChBpD,SAASG,EAAT,GAAgC,IAARC,EAAO,EAAPA,IACrC,OAAO,qBAAKd,UAAWC,IAAMU,MAAtB,SAA8BG,ICExB,SAASC,EAAT,GAUX,IATFJ,EASC,EATDA,MACAd,EAQC,EARDA,gBACAC,EAOC,EAPDA,mBACAC,EAMC,EANDA,eACAO,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,cACAC,EACC,EADDA,2BAEA,OACE,qCACE,oBAAIV,UAAWC,IAAMU,MAArB,SAA6BA,IAC7B,cAACf,EAAD,CACEC,gBAAiBA,EACjBC,mBAAoBA,EACpBC,eAAgBA,IAEjBO,GAAQC,GAAWC,EAClB,cAACH,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,cAAeA,EACfC,2BAA4BA,IAG9B,cAACG,EAAD,CAAcC,IAAI,yB,IC/BpBE,E,4MACJC,MAAQ,CACNX,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPX,gBAAkB,WAChB,EAAKqB,UAAS,SAACC,GACb,MAAO,CAAEb,KAAMa,EAAUb,KAAO,O,EAGpCR,mBAAqB,WACnB,EAAKoB,UAAS,SAACC,GACb,MAAO,CAAEZ,QAASY,EAAUZ,QAAU,O,EAG1CR,eAAiB,WACf,EAAKmB,UAAS,SAACC,GACb,MAAO,CAAEX,IAAKW,EAAUX,IAAM,O,4CAIlC,WACE,MAA+BY,KAAKH,MAA5BX,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBa,EAAqBf,EAAOC,EAAUC,EACtCc,EAAkCC,KAAKC,MAC1ClB,EAAOe,EAAsB,KAEhC,OACE,qBAAKrB,UAAU,MAAf,SACE,cAACe,EAAD,CACEJ,MAAO,wBACPd,gBAAiBuB,KAAKvB,gBACtBC,mBAAoBsB,KAAKtB,mBACzBC,eAAgBqB,KAAKrB,eACrBO,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,cAAeY,EACfX,2BAA4BY,U,GAxCpBG,aA+CHT,IC9CfU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.45ad0ff6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"statistics_title__5UWMo\",\"p\":\"statistics_p__1fz7E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"feedback_button__2JZNm\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport style from \"./feedback.module.css\";\n\nexport default function FeedbackOptions({\n  handleClickGood,\n  handleClickNeutral,\n  handleClickBad,\n}) {\n  return (\n    <>\n      <button className={style.button} type=\"button\" onClick={handleClickGood}>\n        Good\n      </button>\n      <button\n        className={style.button}\n        type=\"button\"\n        onClick={handleClickNeutral}\n      >\n        Neutral\n      </button>\n      <button className={style.button} type=\"button\" onClick={handleClickBad}>\n        Bad\n      </button>\n    </>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  handleClickGood: PropTypes.func.isRequired,\n  handleClickNeutral: PropTypes.func.isRequired,\n  handleClickBad: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport style from \"./statistics.module.css\";\n\nexport default function Statistics({\n  good,\n  neutral,\n  bad,\n  totalFeedback,\n  positiveFeedbackPercentage,\n}) {\n  return (\n    <>\n      <h2 className={style.title}>Statistics</h2>\n      <p className={style.p}>Good: {good}</p>\n      <p className={style.p}>Neutral: {neutral}</p>\n      <p className={style.p}>Bad: {bad}</p>\n      <p className={style.p}>Total: {totalFeedback}</p>\n      <p className={style.p}>\n        Positive feedback:{\" \"}\n        {positiveFeedbackPercentage ? positiveFeedbackPercentage : 0}\n      </p>\n    </>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  totalFeedback: PropTypes.number.isRequired,\n  positiveFeedbackPercentage: PropTypes.number.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport style from \"../statistics/statistics.module.css\";\n\nexport default function Notification({ msg }) {\n  return <div className={style.title}>{msg}</div>;\n}\n\nNotification.propTypes = {\n  msg: PropTypes.string.isRequired,\n};\n","import React from \"react\";\nimport style from \"./section.modules.css\";\nimport FeedbackOptions from \"../feedback/Feedback\";\nimport Statistics from \"../statistics/Statistics\";\nimport Notification from \"../notification/Notification\";\nimport PropTypes from \"prop-types\";\n\nexport default function Section({\n  title,\n  handleClickGood,\n  handleClickNeutral,\n  handleClickBad,\n  good,\n  neutral,\n  bad,\n  totalFeedback,\n  positiveFeedbackPercentage,\n}) {\n  return (\n    <>\n      <h2 className={style.title}>{title}</h2>\n      <FeedbackOptions\n        handleClickGood={handleClickGood}\n        handleClickNeutral={handleClickNeutral}\n        handleClickBad={handleClickBad}\n      />\n      {good || neutral || bad ? (\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          totalFeedback={totalFeedback}\n          positiveFeedbackPercentage={positiveFeedbackPercentage}\n        />\n      ) : (\n        <Notification msg=\"No feedback given\" />\n      )}\n    </>\n  );\n}\n\nSection.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  totalFeedback: PropTypes.number.isRequired,\n  positiveFeedbackPercentage: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  handleClickGood: PropTypes.func.isRequired,\n  handleClickNeutral: PropTypes.func.isRequired,\n  handleClickBad: PropTypes.func.isRequired,\n};\n","import \"./App.css\";\nimport { Component } from \"react\";\nimport Section from \"./components/section/Section\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleClickGood = () => {\n    this.setState((prevState) => {\n      return { good: prevState.good + 1 };\n    });\n  };\n  handleClickNeutral = () => {\n    this.setState((prevState) => {\n      return { neutral: prevState.neutral + 1 };\n    });\n  };\n  handleClickBad = () => {\n    this.setState((prevState) => {\n      return { bad: prevState.bad + 1 };\n    });\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const countTotalFeedback = good + neutral + bad;\n    const countPositiveFeedbackPercentage = Math.round(\n      (good / countTotalFeedback) * 100\n    );\n    return (\n      <div className=\"App\">\n        <Section\n          title={\"Please leave feedback\"}\n          handleClickGood={this.handleClickGood}\n          handleClickNeutral={this.handleClickNeutral}\n          handleClickBad={this.handleClickBad}\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          totalFeedback={countTotalFeedback}\n          positiveFeedbackPercentage={countPositiveFeedbackPercentage}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}